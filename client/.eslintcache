[{"/Users/user/Documents/Projects/quiz_app/client/src/index.js":"1","/Users/user/Documents/Projects/quiz_app/client/src/App.js":"2","/Users/user/Documents/Projects/quiz_app/client/src/components/GameCenter.js":"3","/Users/user/Documents/Projects/quiz_app/client/src/components/LandingPage.js":"4"},{"size":197,"mtime":1608224957546,"results":"5","hashOfConfig":"6"},{"size":402,"mtime":1608295662208,"results":"7","hashOfConfig":"6"},{"size":5593,"mtime":1608299229926,"results":"8","hashOfConfig":"6"},{"size":1321,"mtime":1608297508355,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"v5w4qg",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"12"},"/Users/user/Documents/Projects/quiz_app/client/src/index.js",[],["23","24"],"/Users/user/Documents/Projects/quiz_app/client/src/App.js",["25"],"import \"./App.css\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport GameCenter from \"./components/GameCenter\";\nimport LandingPage from \"./components/LandingPage\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Route exact path=\"/\" component={LandingPage} />\n      <Route exact path=\"/quiz/:user\" component={GameCenter} />\n    </Router>\n  );\n};\n\nexport default App;\n","/Users/user/Documents/Projects/quiz_app/client/src/components/GameCenter.js",["26","27","28","29"],"import React, {useState, Fragment, useEffect} from \"react\";\nimport \"./GameCenter.css\";\nimport maxi from \"./../resources/maxiBild.jpg\";\nimport siggi from \"./../resources/siggiBild.jpg\";\nimport io from \"socket.io-client\";\n// connecting to the socket server\nconst socket = io.connect(\"http://127.0.0.1:4001\");\n\nconst GameCenter = props => {\n  const user = props.match.params.user;\n  // const [response, setResponse] = useState(\"\");\n  // connecting to the socket server\n  useEffect(() => {\n    socket.on(\"buzzerClicked\", ({player}) => {\n      setBuzzerStatus(true);\n      setBuzzerClicker(player);\n    });\n    socket.on(\"buzzerReset\", () => {\n      setBuzzerStatus(false);\n    });\n  }, []);\n\n  // state initialization\n  let [currentStakes, setCurrentStakes] = useState({\n    firstPlayer: 0,\n    secondPlayer: 0\n  });\n  let [currentPoints, setCurrentPoints] = useState({\n    firstPlayer: 100,\n    secondPlayer: 100\n  });\n  let [answeredQuestions, setAnsweredQuestions] = useState(0);\n  let [whoClicked, setBuzzerClicker] = useState(\"\");\n  let [buzzerBlocked, setBuzzerStatus] = useState(false);\n\n  const handleBuzzerClick = () => {\n    setBuzzerStatus(true);\n    setBuzzerClicker(user.split(\"_\").join(\" \"));\n    socket.emit(\"buzzerClicked\", {player: user.split(\"_\").join(\" \")});\n  };\n\n  const handleCorrectAnswer = player => {\n    setCurrentPoints({\n      ...currentPoints,\n      [player]:\n        parseInt(currentPoints[player]) + parseInt(currentStakes[player])\n    });\n    socket.emit(\"buzzerReset\");\n  };\n\n  const handleWrongAnswer = player => {\n    setCurrentPoints({\n      ...currentPoints,\n      [player]:\n        parseInt(currentPoints[player]) - parseInt(currentStakes[player])\n    });\n    socket.emit(\"buzzerReset\");\n  };\n\n  const handleBuzzerReset = () => {\n    socket.emit(\"buzzerReset\");\n  };\n\n  return (\n    <Fragment>\n      {buzzerBlocked ? (\n        <div className=\"buzzerBlockedScreen\">\n          <div className=\"whoBuzzered\">\n            <span className=\"firstClicker\">{whoClicked}</span>\n            hat zuerst gedrückt!\n          </div>\n        </div>\n      ) : null}\n      <div className=\"gameCenter\">\n        <div className=\"scoreBoard\">\n          <div className=\"playerContainer\">\n            <h2 className=\"playerName\">Kleines Gehirn</h2>\n            <img className=\"playerPicture\" src={siggi} />\n            <h4 className=\"stakes\">\n              Aktueller Einsatz: {currentStakes.firstPlayer}\n            </h4>\n          </div>\n          <div className=\"scoreContainer\">\n            <h2 className=\"playerName\">Punktestand</h2>\n            <div className=\"pointsContainer\">\n              <h2>{currentPoints.firstPlayer}</h2>\n              <div className=\"pointsDivider\"></div>\n              <h2>{currentPoints.secondPlayer}</h2>\n            </div>\n          </div>\n          <div className=\"playerContainer\">\n            <h2 className=\"playerName\">Ober Alman</h2>\n            <img className=\"playerPicture\" src={maxi} />\n            <h4 className=\"stakes\">\n              Aktueller Einsatz: {currentStakes.secondPlayer}\n            </h4>\n          </div>\n        </div>\n        <div className=\"metrics\">\n          <div className=\"changeStakes\">\n            <h3 className=\"changeStakesText\">Beantwortete Fragen:</h3>\n            <h3 className=\"numberOfQuestions\">0</h3>\n            <h3 className=\"changeStakesText\">Einsatz ändern</h3>\n            <input\n              type=\"text\"\n              onChange={e =>\n                setCurrentStakes({\n                  ...currentStakes,\n                  firstPlayer: e.target.value\n                })\n              }\n              placeholder={0}\n            ></input>\n          </div>\n          <div\n            className=\"buzzer\"\n            onClick={e => handleBuzzerClick(\"Kleines Gehirn\")}\n          >\n            BUZZER\n          </div>\n          <div className=\"changeStakes\">\n            <h3 className=\"changeStakesText\">Beantwortete Fragen:</h3>\n            <h3 className=\"numberOfQuestions\">0</h3>\n            <h3 className=\"changeStakesText\">Einsatz ändern</h3>\n            <input\n              type=\"text\"\n              onChange={e =>\n                setCurrentStakes({\n                  ...currentStakes,\n                  secondPlayer: e.target.value\n                })\n              }\n              placeholder={0}\n            ></input>\n          </div>\n        </div>\n      </div>\n      {user === \"host\" ? (\n        <div className=\"adminPanel\">\n          <div className=\"firstPlayerPanel\">\n            <div\n              className=\"button correct\"\n              onClick={() => handleCorrectAnswer(\"firstPlayer\")}\n            >\n              RICHTIG\n            </div>\n            <div\n              className=\"button false\"\n              onClick={() => handleWrongAnswer(\"firstPlayer\")}\n            >\n              FALSCH\n            </div>\n            <div className=\"button notAnswered\">KEINE ANTWORT</div>\n          </div>\n          <div className=\"button\" onClick={() => handleBuzzerReset()}>\n            Buzzer freischalten\n          </div>\n          <div className=\"secondPlayerPanel\">\n            <div\n              className=\"button correct\"\n              onClick={() => handleCorrectAnswer(\"secondPlayer\")}\n            >\n              RICHTIG\n            </div>\n            <div\n              className=\"button false\"\n              onClick={() => handleWrongAnswer(\"secondPlayer\")}\n            >\n              FALSCH\n            </div>\n            <div className=\"button notAnswered\">KEINE ANTWORT</div>\n          </div>\n        </div>\n      ) : null}\n    </Fragment>\n  );\n};\n\nexport default GameCenter;\n",["30","31"],"/Users/user/Documents/Projects/quiz_app/client/src/components/LandingPage.js",["32","33","34","35","36","37"],"import React, {useState, Fragment, useEffect} from \"react\";\nimport \"./LandingPage.css\";\nimport maxi from \"./../resources/maxiBild.jpg\";\nimport siggi from \"./../resources/siggiBild.jpg\";\n\nconst LandingPage = props => {\n  let [whoClicked, setBuzzerClicker] = useState(\"Marcel\");\n\n  console.log(props.history);\n  const handleChoice = choice => {\n    props.history.push(choice);\n  };\n\n  return (\n    <Fragment>\n      <div className=\"gameCenter\">\n        <ul className=\"selectPlayer\">\n          <li\n            className=\"selectOption\"\n            onClick={e => handleChoice(\"/quiz/ober_alman\")}\n          >\n            <img src={maxi} className=\"selectPicture\" />\n            <h2 className=\"playerName\">OBER ALMAN</h2>\n          </li>\n          <li\n            className=\"selectOption\"\n            onClick={e => handleChoice(\"/quiz/kleines_gehirn\")}\n          >\n            <img src={siggi} className=\"selectPicture\" />\n            <h2 className=\"playerName\">KLEINES GEHIRN</h2>\n          </li>\n          <li\n            className=\"selectOption\"\n            onClick={e => handleChoice(\"/quiz/host\")}\n          >\n            <img src={siggi} className=\"selectPicture\" />\n            <h2 className=\"playerName\">Questionmaster</h2>\n          </li>\n        </ul>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default LandingPage;\n",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":2,"column":41,"nodeType":"44","messageId":"45","endLine":2,"endColumn":47},{"ruleId":"42","severity":1,"message":"46","line":32,"column":8,"nodeType":"44","messageId":"45","endLine":32,"endColumn":25},{"ruleId":"42","severity":1,"message":"47","line":32,"column":27,"nodeType":"44","messageId":"45","endLine":32,"endColumn":47},{"ruleId":"48","severity":1,"message":"49","line":78,"column":13,"nodeType":"50","endLine":78,"endColumn":58},{"ruleId":"48","severity":1,"message":"49","line":93,"column":13,"nodeType":"50","endLine":93,"endColumn":57},{"ruleId":"38","replacedBy":"51"},{"ruleId":"40","replacedBy":"52"},{"ruleId":"42","severity":1,"message":"53","line":1,"column":36,"nodeType":"44","messageId":"45","endLine":1,"endColumn":45},{"ruleId":"42","severity":1,"message":"54","line":7,"column":8,"nodeType":"44","messageId":"45","endLine":7,"endColumn":18},{"ruleId":"42","severity":1,"message":"55","line":7,"column":20,"nodeType":"44","messageId":"45","endLine":7,"endColumn":36},{"ruleId":"48","severity":1,"message":"49","line":22,"column":13,"nodeType":"50","endLine":22,"endColumn":57},{"ruleId":"48","severity":1,"message":"49","line":29,"column":13,"nodeType":"50","endLine":29,"endColumn":58},{"ruleId":"48","severity":1,"message":"49","line":36,"column":13,"nodeType":"50","endLine":36,"endColumn":58},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'answeredQuestions' is assigned a value but never used.","'setAnsweredQuestions' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["56"],["57"],"'useEffect' is defined but never used.","'whoClicked' is assigned a value but never used.","'setBuzzerClicker' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]