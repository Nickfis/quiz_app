[{"/Users/user/Documents/Projects/quiz_app/client/src/index.js":"1","/Users/user/Documents/Projects/quiz_app/client/src/App.js":"2","/Users/user/Documents/Projects/quiz_app/client/src/components/GameCenter.js":"3"},{"size":197,"mtime":1608224957546,"results":"4","hashOfConfig":"5"},{"size":185,"mtime":1608229520284,"results":"6","hashOfConfig":"5"},{"size":3830,"mtime":1608232055534,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"v5w4qg",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"/Users/user/Documents/Projects/quiz_app/client/src/index.js",[],["16","17"],"/Users/user/Documents/Projects/quiz_app/client/src/App.js",[],"/Users/user/Documents/Projects/quiz_app/client/src/components/GameCenter.js",["18","19","20","21","22"],"import React, {useState, Fragment} from \"react\";\nimport \"./GameCenter.css\";\nimport maxi from \"./../resources/maxiBild.jpg\";\nimport siggi from \"./../resources/siggiBild.jpg\";\n\nconst GameCenter = () => {\n  let [currentStakes, setCurrentStakes] = useState({\n    firstPlayer: 0,\n    secondPlayer: 0\n  });\n  let [answeredQuestions, setAnsweredQuestions] = useState(0);\n\n  let [buzzerBlocked, setBuzzerStatus] = useState(false);\n  let [whoClicked, setBuzzerClicker] = useState(\"Marcel\");\n\n  const handleBuzzerClick = player => {\n    setBuzzerStatus(true);\n    console.log(`${player} has pressed the button bitch!!!`);\n    setBuzzerClicker(player);\n  };\n\n  const handleStakeSubmit = (e, player) => {\n    e.preventDefault();\n    console.log(e);\n    // setCurrentStakes({...currentStakes, player: })\n  };\n\n  return (\n    <Fragment>\n      {buzzerBlocked ? (\n        <div className=\"buzzerBlockedScreen\">\n          <div className=\"whoBuzzered\">\n            <span className=\"firstClicker\">{whoClicked}</span>\n            hat zuerst gedrückt! Sag die Antwort du Opfer.\n          </div>\n        </div>\n      ) : null}\n      <div className=\"gameCenter\">\n        <div className=\"scoreBoard\">\n          <div className=\"playerContainer\">\n            <h2 className=\"playerName\">Kleines Gehirn</h2>\n            <img className=\"playerPicture\" src={siggi} />\n            <h4 className=\"stakes\">\n              Aktueller Einsatz: {currentStakes.firstPlayer}\n            </h4>\n          </div>\n          <div className=\"scoreContainer\">\n            <h2 className=\"playerName\">Punktestand</h2>\n            <div className=\"pointsContainer\">\n              <h2>100</h2>\n              <div className=\"pointsDivider\"></div>\n              <h2>100</h2>\n            </div>\n          </div>\n          <div className=\"playerContainer\">\n            <h2 className=\"playerName\">Ober Alman</h2>\n            <img className=\"playerPicture\" src={maxi} />\n            <h4 className=\"stakes\">\n              Aktueller Einsatz: {currentStakes.secondPlayer}\n            </h4>\n          </div>\n        </div>\n        <div className=\"metrics\">\n          <div className=\"changeStakes\">\n            <h3 className=\"changeStakesText\">Beantwortete Fragen:</h3>\n            <h3 className=\"numberOfQuestions\">0</h3>\n            <h3 className=\"changeStakesText\">Einsatz ändern</h3>\n            <input\n              type=\"text\"\n              onChange={e =>\n                setCurrentStakes({\n                  ...currentStakes,\n                  firstPlayer: e.target.value\n                })\n              }\n              placeholder={0}\n            ></input>\n          </div>\n          <div\n            className=\"buzzer\"\n            onClick={e => handleBuzzerClick(\"Kleines Gehirn\")}\n          >\n            BUZZER\n          </div>\n          <div className=\"changeStakes\">\n            <h3 className=\"changeStakesText\">Beantwortete Fragen:</h3>\n            <h3 className=\"numberOfQuestions\">0</h3>\n            <h3 className=\"changeStakesText\">Einsatz ändern</h3>\n            <input\n              type=\"text\"\n              onChange={e =>\n                setCurrentStakes({\n                  ...currentStakes,\n                  secondPlayer: e.target.value\n                })\n              }\n              placeholder={0}\n            ></input>\n          </div>\n        </div>\n      </div>\n      <div className=\"adminPanel\">\n        <div className=\"firstPlayerPanel\">\n          <div className=\"button\"></div>\n          <div className=\"button\"></div>\n        </div>\n        <div className=\"button\" onClick={e => setBuzzerStatus(false)}>\n          Buzzer freischalten\n        </div>\n        <div className=\"secondPlayerPanel\">\n          <div className=\"button\"></div>\n          <div className=\"button\"></div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default GameCenter;\n",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":11,"column":8,"nodeType":"29","messageId":"30","endLine":11,"endColumn":25},{"ruleId":"27","severity":1,"message":"31","line":11,"column":27,"nodeType":"29","messageId":"30","endLine":11,"endColumn":47},{"ruleId":"27","severity":1,"message":"32","line":22,"column":9,"nodeType":"29","messageId":"30","endLine":22,"endColumn":26},{"ruleId":"33","severity":1,"message":"34","line":42,"column":13,"nodeType":"35","endLine":42,"endColumn":58},{"ruleId":"33","severity":1,"message":"34","line":57,"column":13,"nodeType":"35","endLine":57,"endColumn":57},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-unused-vars","'answeredQuestions' is assigned a value but never used.","Identifier","unusedVar","'setAnsweredQuestions' is assigned a value but never used.","'handleStakeSubmit' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]